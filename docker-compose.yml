version: "3.8"

services:
  # service1:
  #   build:
  #     context: ./service1
  #   container_name: service1
  #   ports:
  #     - "8001:8000"

  # service2:
  #   build:
  #     context: ./service2
  #   container_name: service2
  #   ports:
  #     - "8002:8000"

  users:
    # build:
    #   context: ./backend/users
    image: cr.yandex/crpra91s6h2kfrop22b1/davg/users
    hostname: users
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:azp7speotnJP4iCRfA7j@217.12.38.203:5432/mydatabase
      - SECRET_KEY_PATH=/run/secrets/private.pem
      - PUBLIC_KEY_PATH=/run/secrets/public.pem
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - OAUTH_AUTHORIZE_URL=https://lk.orb.ru/oauth/authorize
      - OAUTH_TOKEN_URL=https://lk.orb.ru/oauth/token
      - OAUTH_USERINFO_URL=https://lk.orb.ru/api/get_user
      - OAUTH_SCOPES=rsaag_id+email
    volumes:
      - ./keys:/run/secrets:ro
      - ./hackathon-8.orb.ru:/etc/letsencrypt/live/hackathon-8.orb.ru
    networks:
      - backbone
    depends_on:
      - postgres_db

  # databases
  postgres_db:
    image: postgres
    restart: always
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: azp7speotnJP4iCRfA7j
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backbone
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # mongodb:
  #   image: mongo
  #   container_name: mongodb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # # nginx
  # frontend-build:
  #   build:
  #     context: ./frontend
  #   container_name: frontend-build
  #   volumes:
  #     - ./frontend/:/frontend/build/:rw
  #   # command: ["true"] # Запускается только для сборки

  nginx:
    # build:
    #   context: ./router
    image: cr.yandex/crpra91s6h2kfrop22b1/davg/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    # depends_on:
    #   - frontend-build
    volumes:
      - ./frontend/dist:/frontend/build
      - ./hackathon-8.orb.ru:/etc/letsencrypt/live/hackathon-8.orb.ru
      # - ./router/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backbone

  #   # volumes:
  #   #   - ./files:/tmp/files/
  #   #   - ./frontend/dist:/root/mc/

networks:
  backbone:
    driver: bridge

volumes:
  postgres_data:
  # mongo_data: