version: "3.8"

services:
  users:
    build:
      context: ./backend/users
    # image: cr.yandex/crpra91s6h2kfrop22b1/davg/users
    hostname: users
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:azp7speotnJP4iCRfA7j@217.12.38.203:5432/mydatabase
      - SECRET_KEY_PATH=/run/secrets/private.pem
      - PUBLIC_KEY_PATH=/run/secrets/public.pem
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - OAUTH_AUTHORIZE_URL=https://lk.orb.ru/oauth/authorize
      - OAUTH_TOKEN_URL=https://lk.orb.ru/oauth/token
      - OAUTH_USERINFO_URL=https://lk.orb.ru/api/get_user
      - OAUTH_SCOPES=rsaag_id+email
      - OAUTH_CLIENT_SECRET=2jp1SXV7sQQP7bQuJb2AV8cosHrk24JDOLKaG7u1
      - OAUTH_CLIENT_ID=29
    volumes:
      - ./keys:/run/secrets:ro
      - ./hackathon-8.orb.ru:/etc/letsencrypt/live/hackathon-8.orb.ru
    networks:
      - backbone
    depends_on:
      - postgres_db

  drafts:
    # image: cr.yandex/crpra91s6h2kfrop22b1/davg/drafts
    build: 
      context: ./backend/drafts
    hostname: drafts
    ports:
      - "8082:8082"
    environment:
      - ENV_TYPE=prod
      - DATABASE_URL=postgresql://user:azp7speotnJP4iCRfA7j@217.12.38.203:5432/mydatabase
    networks:
      - backbone
    depends_on:
      - postgres_db
      - records
    volumes:
      - ./keys:/app/keys:ro
  
  logger:
    # image: cr.yandex/crpra91s6h2kfrop22b1/davg/logger
    build:
      context: ./backend/logger
    hostname: logger
    ports:
      - "8081:8081"
    environment:
      - ENV_TYPE=prod
      - DB_URI=mongodb://root:passwordXD_1234@mongodb:27017
    networks:
      - backbone
    depends_on:
      - mongodb
      - users


  records:
    # image: cr.yandex/crpra91s6h2kfrop22b1/davg/records
    build:
      context: ./backend/records
    hostname: records
    ports:
      - "8080:8080"
    environment:
      - ENV_TYPE=prod
      - DATABASE_URL=postgresql://user:azp7speotnJP4iCRfA7j@217.12.38.203:5432/mydatabase
      - MINIO_ENDPOINT=hackathon-8.orb.ru:9000
      - MINIO_ACCESS_KEY=oRJ0HxenpA7N3jPeXGOV
      - MINIO_SECRET_KEY=ezk5pgyodSTUUYKS6Mg0gaE28JDGlu5uo0Stnq3W
      - MINIO_BUCKET_NAME=user-documents
      - CLIENT_LAYER_ID=8788
      - CLIENT_USERNAME=hackathon_19
      - CLIENT_PASSWORD=hackathon_19_25
    volumes:
      - ./keys:/app/keys:ro
    networks:
      - backbone
    depends_on:
      - postgres_db
      - minio
      - logger

  # databases
  postgres_db:
    image: postgres
    restart: always
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: azp7speotnJP4iCRfA7j
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backbone
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    image: mongo
    container_name: mongodb
    hostname: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: passwordXD_1234
      MONGO_INITDB_DATABASE: local
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backbone
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    hostname: minio
    volumes:
      - ./data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: 'root'
      MINIO_ROOT_PASSWORD: 'passwordXD_1234'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    networks:
      - backbone
    command: minio server /data
  # # nginx
  frontend-build:
    build:
      context: ./frontend
    container_name: frontend-build
    volumes:
      - ./frontend/:/frontend/build/:rw
    # command: ["true"] # Запускается только для сборки

  nginx:
    build:
      context: ./router
    # image: cr.yandex/crpra91s6h2kfrop22b1/davg/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    # depends_on:
    #   - frontend-build
    volumes:
      - ./frontend/dist:/frontend/build
      # - ./hackathon-8.orb.ru:/etc/letsencrypt/live/hackathon-8.orb.ru
      # - ./router/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backbone

  #   # volumes:
  #   #   - ./files:/tmp/files/
  #   #   - ./frontend/dist:/root/mc/

networks:
  backbone:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
